[build]
  command = "pnpm --filter @my-project/auth prisma && pnpm --filter @my-project/site1 prisma && ls -l ../auth/node_modules/.prisma/client/ || echo 'No binary in auth' && ls -l node_modules/.prisma/client/ || echo 'No binary in site1' && pnpm --filter @my-project/site1 build && mkdir -p .netlify/functions-internal/prisma/client && if [ -f ../auth/node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node ]; then cp ../auth/node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node .netlify/functions-internal/prisma/client/ && cp ../auth/node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node .netlify/functions-internal/ && echo 'Copied binary from auth'; elif [ -f node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node ]; then cp node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node .netlify/functions-internal/prisma/client/ && cp node_modules/.prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node .netlify/functions-internal/ && echo 'Copied binary from site1'; else echo 'Warning: Prisma query engine binary not found'; fi && cp ../auth/dist/functions/trpc.js .netlify/functions-internal/trpc.js"
  publish = "dist"
  functions = ".netlify/functions-internal"

[build.environment]
  DATABASE_URL = "postgresql://postgres:zhljkw-wudfnhu-vwdjlqj-ghy@db.frujfirwqiddeicvtjha.supabase.co:5432/postgres"
  NODE_VERSION = "18"
  PRISMA_LOG_LEVEL = "debug"
  PRISMA_CLI_BINARY_TARGETS = "rhel-openssl-3.0.x"

[dev]
  command = "pnpm --filter @my-project/site1 dev"
  framework = "#custom"
  targetPort = 5173
  port = 8888
  functions = ".netlify/functions-internal"
  functionsPort = 8888
  autoLaunch = true

[[redirects]]
  from = "/trpc/*"
  to = "/.netlify/functions/trpc/:splat"
  status = 200

[functions]
  node_bundler = "esbuild"
  included_files = [
    ".netlify/functions-internal/trpc.js",
    ".netlify/functions-internal/prisma/client/libquery_engine-rhel-openssl-3.0.x.so.node",
    ".netlify/functions-internal/libquery_engine-rhel-openssl-3.0.x.so.node"
  ]