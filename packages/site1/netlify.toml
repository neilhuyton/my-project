[build]
  command = "cd /opt/build/repo && pnpm install && echo 'Listing pnpm store' && pnpm store path && echo 'Listing dependencies' && pnpm list --depth 0 && cd packages/auth && echo 'Running prisma generate in auth' && PRISMA_CLI_BINARY_TARGETS=rhel-openssl-3.0.x DATABASE_URL=$DATABASE_URL npx prisma generate --schema=prisma/schema.prisma && ls -l node_modules/.prisma/client/ || { echo 'No binary in auth'; exit 1; } && cd ../site1 && echo 'Running prisma generate in site1' && PRISMA_CLI_BINARY_TARGETS=rhel-openssl-3.0.x DATABASE_URL=$DATABASE_URL npx prisma generate --schema=prisma/schema.prisma && ls -l node_modules/.prisma/client/ || { echo 'No binary in site1'; exit 1; } && pnpm --filter @my-project/site1 build && mkdir -p .netlify/functions-internal/prisma/client && cp -r ../auth/node_modules/.prisma/client/* .netlify/functions-internal/prisma/client/ && cp ../auth/dist/functions/trpc.js .netlify/functions-internal/trpc.js && echo 'Copied full Prisma client to .netlify/functions-internal/prisma/client/' && ls -l .netlify/functions-internal/prisma/client/ || { echo 'No files in .netlify/functions-internal/prisma/client/'; exit 1; }"
  publish = "dist"
  functions = ".netlify/functions-internal"

[build.environment]
  DATABASE_URL = "postgresql://postgres:zhljkw-wudfnhu-vwdjlqj-ghy@db.frujfirwqiddeicvtjha.supabase.co:5432/postgres"
  NODE_VERSION = "18"
  PRISMA_LOG_LEVEL = "debug"
  PRISMA_CLI_BINARY_TARGETS = "rhel-openssl-3.0.x"

[dev]
  command = "pnpm --filter @my-project/site1 dev"
  framework = "#custom"
  targetPort = 5173
  port = 8888
  functions = ".netlify/functions-internal"
  functionsPort = 8888
  autoLaunch = true

[[redirects]]
  from = "/trpc/*"
  to = "/.netlify/functions/trpc/:splat"
  status = 200

[functions]
  node_bundler = "esbuild"
  included_files = [
    ".netlify/functions-internal/trpc.js",
    ".netlify/functions-internal/prisma/client/**"
  ]